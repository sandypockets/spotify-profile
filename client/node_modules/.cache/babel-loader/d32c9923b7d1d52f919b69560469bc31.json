{"ast":null,"code":"var _jsxFileName = \"/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlists/Playlist.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../../spotify';\nimport { catchErrors } from '../../utils';\nimport Loader from '../Loader';\nimport TrackItem from '../Tracks/TrackItem'; // import FeatureChart from './FeatureChart';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Playlist(props) {\n  _s();\n\n  const {\n    playlistId\n  } = props;\n  const [playlist, setPlaylist] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getPlaylist(playlistId);\n      setPlaylist(data);\n    };\n\n    catchErrors(fetchData());\n  }, [playlistId]);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (playlist) {\n        const {\n          data\n        } = await getAudioFeaturesForTracks(playlist.tracks.items);\n        setAudioFeatures(data);\n      }\n    };\n\n    catchErrors(fetchData());\n  }, [playlist]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playlist ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-full mx-auto p-24\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3 text-center\",\n          children: [playlist.images.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow-lg w-full mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: playlist.images[0].url,\n              alt: \"Album Art\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: playlist.external_urls.spotify,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-xl mt-12\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-lightGrey\",\n            children: [\"By \", playlist.owner.display_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), playlist.description && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-lightGrey\",\n            dangerouslySetInnerHTML: {\n              __html: playlist.description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-white mt-12\",\n            children: [playlist.tracks.total, \" Tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/recommendations/${playlist.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"inline-block bg-green text-white font-semibold text-xs uppercase rounded-full px 4 py-4 cursor-pointer hover:bg-offGreen\",\n              children: \"Get Recommendations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-grow ml-24\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: playlist.tracks && playlist.tracks.items.map((_ref, i) => {\n              let {\n                track\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TrackItem, {\n                track: track,\n                imageSize: \"medium\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 63\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Playlist, \"npNkFsBA7OsWa/5pfSat00CrRKI=\");\n\n_c = Playlist;\nPlaylist.propTypes = {\n  playlistId: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"sources":["/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlists/Playlist.jsx"],"names":["useState","useEffect","Link","PropTypes","getPlaylist","getAudioFeaturesForTracks","catchErrors","Loader","TrackItem","Playlist","props","playlistId","playlist","setPlaylist","audioFeatures","setAudioFeatures","fetchData","data","tracks","items","images","length","url","external_urls","spotify","name","owner","display_name","description","__html","total","id","map","i","track","propTypes","string"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../../spotify';\nimport { catchErrors } from '../../utils';\nimport Loader from '../Loader';\nimport TrackItem from '../Tracks/TrackItem';\n// import FeatureChart from './FeatureChart';\n\nexport default function Playlist(props) {\n  const { playlistId } = props;\n  const [playlist, setPlaylist] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getPlaylist(playlistId);\n      setPlaylist(data);\n    };\n    catchErrors(fetchData())\n  }, [playlistId])\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (playlist) {\n        const { data } = await getAudioFeaturesForTracks(playlist.tracks.items);\n        setAudioFeatures(data)\n      }\n    };\n    catchErrors(fetchData())\n  }, [playlist])\n\n  return (\n    <>\n      {playlist ? (\n        <main className=\"w-full mx-auto p-24\">\n          <div className=\"flex\">\n            <div className=\"w-1/3 text-center\">\n              {playlist.images.length && (\n                <div className=\"shadow-lg w-full mx-auto\">\n                  <img src={playlist.images[0].url} alt=\"Album Art\" />\n                </div>\n              )}\n              <a href={playlist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n                <h3 className=\"font-semibold text-xl mt-12\">{playlist.name}</h3>\n              </a>\n              <p className=\"text-sm text-lightGrey\">\n                By {playlist.owner.display_name}\n              </p>\n              {playlist.description && (\n                <p className=\"text-sm text-lightGrey\" dangerouslySetInnerHTML={{ __html: playlist.description }} />\n              )}\n              <p className=\"text-sm text-white mt-12\">\n                {playlist.tracks.total} Tracks\n              </p>\n              <Link to={`/recommendations/${playlist.id}`}>\n                <a className=\"inline-block bg-green text-white font-semibold text-xs uppercase rounded-full px 4 py-4 cursor-pointer hover:bg-offGreen\">\n                  Get Recommendations\n                </a>\n              </Link>\n              {/*{audioFeatures && (*/}\n              {/*  <FeatureChart features={audioFeatures.audio_features} type=\"horizontalBar\" />*/}\n              {/*)}*/}\n            </div>\n            <div className=\"flex flex-grow ml-24\">\n              <ul>\n                {playlist.tracks &&\n                  playlist.tracks.items.map(({ track }, i) => <TrackItem track={track} key={i} imageSize=\"medium\" />)}\n              </ul>\n            </div>\n          </div>\n        </main>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n}\n\nPlaylist.propTypes = {\n  playlistId: PropTypes.string,\n};\n\n"]},"metadata":{},"sourceType":"module"}