{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\nimport FeatureChart from './FeatureChart';\nimport { theme, mixins, media, Main } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  colors,\n  fontSizes,\n  spacing\n} = theme;\nconst PlaylistCover = _styled.div`\n  ${mixins.coverShadow};\n  width: 100%;\n  max-width: 300px;\n  margin: 0 auto;\n  ${media.tablet`\n    display: none;\n  `};\n`;\nconst Name = _styled.h3`\n  font-weight: 700;\n  font-size: ${fontSizes.xl};\n  margin-top: 20px;\n`;\nconst Description = _styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.lightGrey};\n  a {\n    color: ${colors.white};\n    border-bottom: 1px solid transparent;\n    &:hover,\n    &:focus {\n      border-bottom: 1px solid ${colors.white};\n    }\n  }\n`;\n_c = Description;\nconst RecButton = _styled(Link)`\n  ${mixins.greenButton};\n  margin-bottom: ${spacing.lg};\n`;\n_c2 = RecButton;\nconst Owner = _styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.lightGrey};\n`;\n_c3 = Owner;\nconst TotalTracks = _styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.white};\n  margin-top: 20px;\n`;\n_c4 = TotalTracks;\n\nconst Playlist = props => {\n  _s();\n\n  const {\n    playlistId\n  } = props;\n  const [playlist, setPlaylist] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getPlaylist(playlistId);\n      setPlaylist(data);\n    };\n\n    catchErrors(fetchData());\n  }, [playlistId]);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (playlist) {\n        const {\n          data\n        } = await getAudioFeaturesForTracks(playlist.tracks.items);\n        setAudioFeatures(data);\n      }\n    };\n\n    catchErrors(fetchData());\n  }, [playlist]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playlist ? /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"w-full mx-auto p-24\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1/3 text-center\",\n          children: [playlist.images.length && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shadow-lg w-full mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: playlist.images[0].url,\n              alt: \"Album Art\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: playlist.external_urls.spotify,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"font-semibold text-xl mt-12\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Owner, {\n            children: [\"By \", playlist.owner.display_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), playlist.description && /*#__PURE__*/_jsxDEV(Description, {\n            dangerouslySetInnerHTML: {\n              __html: playlist.description\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TotalTracks, {\n            children: [playlist.tracks.total, \" Tracks\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(RecButton, {\n            to: `/recommendations/${playlist.id}`,\n            children: \"Get Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), audioFeatures && /*#__PURE__*/_jsxDEV(FeatureChart, {\n            features: audioFeatures.audio_features,\n            type: \"horizontalBar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-grow ml-24\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: playlist.tracks && playlist.tracks.items.map((_ref, i) => {\n              let {\n                track\n              } = _ref;\n              return /*#__PURE__*/_jsxDEV(TrackItem, {\n                track: track\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 63\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Playlist, \"npNkFsBA7OsWa/5pfSat00CrRKI=\");\n\n_c5 = Playlist;\nPlaylist.propTypes = {\n  playlistId: PropTypes.string\n};\nexport default Playlist;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Description\");\n$RefreshReg$(_c2, \"RecButton\");\n$RefreshReg$(_c3, \"Owner\");\n$RefreshReg$(_c4, \"TotalTracks\");\n$RefreshReg$(_c5, \"Playlist\");","map":{"version":3,"sources":["/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlist.js"],"names":["React","useState","useEffect","Link","PropTypes","getPlaylist","getAudioFeaturesForTracks","catchErrors","Loader","TrackItem","FeatureChart","theme","mixins","media","Main","colors","fontSizes","spacing","PlaylistCover","styled","div","coverShadow","tablet","Name","h3","xl","Description","p","sm","lightGrey","white","RecButton","greenButton","lg","Owner","TotalTracks","Playlist","props","playlistId","playlist","setPlaylist","audioFeatures","setAudioFeatures","fetchData","data","tracks","items","images","length","url","external_urls","spotify","name","owner","display_name","description","__html","total","id","audio_features","map","i","track","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\nimport { getPlaylist, getAudioFeaturesForTracks } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\nimport FeatureChart from './FeatureChart';\n\nimport styled from 'styled-components/macro';\nimport { theme, mixins, media, Main } from '../styles';\nconst { colors, fontSizes, spacing } = theme;\n\n\nconst PlaylistCover = styled.div`\n  ${mixins.coverShadow};\n  width: 100%;\n  max-width: 300px;\n  margin: 0 auto;\n  ${media.tablet`\n    display: none;\n  `};\n`;\nconst Name = styled.h3`\n  font-weight: 700;\n  font-size: ${fontSizes.xl};\n  margin-top: 20px;\n`;\nconst Description = styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.lightGrey};\n  a {\n    color: ${colors.white};\n    border-bottom: 1px solid transparent;\n    &:hover,\n    &:focus {\n      border-bottom: 1px solid ${colors.white};\n    }\n  }\n`;\nconst RecButton = styled(Link)`\n  ${mixins.greenButton};\n  margin-bottom: ${spacing.lg};\n`;\nconst Owner = styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.lightGrey};\n`;\nconst TotalTracks = styled.p`\n  font-size: ${fontSizes.sm};\n  color: ${colors.white};\n  margin-top: 20px;\n`;\n\nconst Playlist = props => {\n  const { playlistId } = props;\n\n  const [playlist, setPlaylist] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getPlaylist(playlistId);\n      setPlaylist(data);\n    };\n    catchErrors(fetchData());\n  }, [playlistId]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (playlist) {\n        const { data } = await getAudioFeaturesForTracks(playlist.tracks.items);\n        setAudioFeatures(data);\n      }\n    };\n    catchErrors(fetchData());\n  }, [playlist]);\n\n  return (\n    <>\n      {playlist ? (\n        <main className=\"w-full mx-auto p-24\">\n          <div className=\"flex\">\n            <div className=\"w-1/3 text-center\">\n              {playlist.images.length && (\n                <div className=\"shadow-lg w-full mx-auto\">\n                  <img src={playlist.images[0].url} alt=\"Album Art\" />\n                </div>\n              )}\n\n              <a href={playlist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n                <h3 className=\"font-semibold text-xl mt-12\">{playlist.name}</h3>\n              </a>\n\n              <Owner>By {playlist.owner.display_name}</Owner>\n\n              {playlist.description && (\n                <Description dangerouslySetInnerHTML={{ __html: playlist.description }} />\n              )}\n\n              <TotalTracks>{playlist.tracks.total} Tracks</TotalTracks>\n\n              <RecButton to={`/recommendations/${playlist.id}`}>Get Recommendations</RecButton>\n\n              {audioFeatures && (\n                <FeatureChart features={audioFeatures.audio_features} type=\"horizontalBar\" />\n              )}\n            </div>\n            <div className=\"flex flex-grow ml-24\">\n              <ul>\n                {playlist.tracks &&\n                  playlist.tracks.items.map(({ track }, i) => <TrackItem track={track} key={i} />)}\n              </ul>\n            </div>\n          </div>\n        </main>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n\nPlaylist.propTypes = {\n  playlistId: PropTypes.string,\n};\n\nexport default Playlist;\n"]},"metadata":{},"sourceType":"module"}