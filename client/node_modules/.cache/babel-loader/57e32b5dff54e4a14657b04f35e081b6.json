{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/RecentlyPlayed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getRecentlyPlayed } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\nimport { Main } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TracksContainer = _styled.ul`\n  margin-top: 50px;\n`;\n\nconst RecentlyPlayed = () => {\n  _s();\n\n  const [recentlyPlayed, setRecentlyPlayed] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getRecentlyPlayed();\n      setRecentlyPlayed(data);\n    };\n\n    catchErrors(fetchData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Main, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-7xl\",\n      children: \"Recently Played Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-20\",\n      children: recentlyPlayed ? recentlyPlayed.items.map((_ref, i) => {\n        let {\n          track\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(TrackItem, {\n          track: track\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 54\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecentlyPlayed, \"Rz2RpwdZj/rhgYJ+3uwUhSM6xZk=\");\n\n_c = RecentlyPlayed;\nexport default RecentlyPlayed;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"sources":["/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/RecentlyPlayed.js"],"names":["React","useState","useEffect","getRecentlyPlayed","catchErrors","Loader","TrackItem","Main","TracksContainer","styled","ul","RecentlyPlayed","recentlyPlayed","setRecentlyPlayed","fetchData","data","items","map","i","track"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,SAASC,IAAT,QAAqB,WAArB;;AAEA,MAAMC,eAAe,GAAGC,OAAM,CAACC,EAAG;AAClC;AACA,CAFA;;AAIA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMZ,iBAAiB,EAAxC;AACAU,MAAAA,iBAAiB,CAACE,IAAD,CAAjB;AACD,KAHD;;AAIAX,IAAAA,WAAW,CAACU,SAAS,EAAV,CAAX;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE,QAAC,IAAD;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,gBACGF,cAAc,GACbA,cAAc,CAACI,KAAf,CAAqBC,GAArB,CAAyB,OAAYC,CAAZ;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BAAkB,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA;AAAlB,WAA8BD,CAA9B;AAAA;AAAA;AAAA;AAAA,gBAAlB;AAAA,OAAzB,CADa,gBAGb,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvBD;;GAAMP,c;;KAAAA,c;AAyBN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getRecentlyPlayed } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\n\nimport styled from 'styled-components/macro';\nimport { Main } from '../styles';\n\nconst TracksContainer = styled.ul`\n  margin-top: 50px;\n`;\n\nconst RecentlyPlayed = () => {\n  const [recentlyPlayed, setRecentlyPlayed] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getRecentlyPlayed();\n      setRecentlyPlayed(data);\n    };\n    catchErrors(fetchData());\n  }, []);\n\n  return (\n    <Main>\n      <h2 className=\"text-7xl\">Recently Played Tracks</h2>\n      <div className=\"mt-20\">\n        {recentlyPlayed ? (\n          recentlyPlayed.items.map(({ track }, i) => <TrackItem track={track} key={i} />)\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </Main>\n  );\n};\n\nexport default RecentlyPlayed;\n"]},"metadata":{},"sourceType":"module"}