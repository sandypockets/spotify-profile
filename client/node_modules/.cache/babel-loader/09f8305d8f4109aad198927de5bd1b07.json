{"ast":null,"code":"var _jsxFileName = \"/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/RecentlyPlayed.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getRecentlyPlayed } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RecentlyPlayed() {\n  _s();\n\n  const [recentlyPlayed, setRecentlyPlayed] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getRecentlyPlayed();\n      setRecentlyPlayed(data);\n    };\n\n    catchErrors(fetchData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"w-full mx-auto p-24\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-7xl\",\n      children: \"Recently Played Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-20 mx-auto\",\n      children: recentlyPlayed ? recentlyPlayed.items.map((_ref, i) => {\n        let {\n          track\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(TrackItem, {\n          track: track,\n          imageSize: \"medium\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecentlyPlayed, \"Rz2RpwdZj/rhgYJ+3uwUhSM6xZk=\");\n\n_c = RecentlyPlayed;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentlyPlayed\");","map":{"version":3,"sources":["/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/RecentlyPlayed.jsx"],"names":["useState","useEffect","getRecentlyPlayed","catchErrors","Loader","TrackItem","RecentlyPlayed","recentlyPlayed","setRecentlyPlayed","fetchData","data","items","map","i","track"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,SAAS,GAAG,YAAY;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMR,iBAAiB,EAAxC;AACAM,MAAAA,iBAAiB,CAACE,IAAD,CAAjB;AACD,KAHD;;AAIAP,IAAAA,WAAW,CAACM,SAAS,EAAV,CAAX;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGF,cAAc,GACbA,cAAc,CAACI,KAAf,CAAqBC,GAArB,CAAyB,OAAYC,CAAZ;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,4BACvB,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAiC,UAAA,SAAS,EAAC;AAA3C,WAA8BD,CAA9B;AAAA;AAAA;AAAA;AAAA,gBADuB;AAAA,OAAzB,CADa,gBAKb,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAzBuBP,c;;KAAAA,c","sourcesContent":["import { useState, useEffect } from 'react';\nimport { getRecentlyPlayed } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader';\nimport TrackItem from './TrackItem';\n\nexport default function RecentlyPlayed() {\n  const [recentlyPlayed, setRecentlyPlayed] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getRecentlyPlayed()\n      setRecentlyPlayed(data)\n    };\n    catchErrors(fetchData())\n  }, [])\n\n  return (\n    <main className=\"w-full mx-auto p-24\">\n      <h2 className=\"text-7xl\">Recently Played Tracks</h2>\n      <div className=\"mt-20 mx-auto\">\n        {recentlyPlayed ? (\n          recentlyPlayed.items.map(({ track }, i) => (\n            <TrackItem track={track} key={i} imageSize=\"medium\" />\n          ))\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </main>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}