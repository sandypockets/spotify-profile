{"ast":null,"code":"import _styled from \"styled-components\";\n\nvar _jsxFileName = \"/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlists.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils';\nimport Loader from './Loader';\nimport { IconMusic } from './icons';\nimport { theme, mixins, media, Main } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  colors,\n  fontSizes,\n  spacing\n} = theme;\nconst Wrapper = _styled.div`\n  ${mixins.flexBetween};\n  align-items: flex-start;\n`;\nconst PlaylistsContainer = _styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: ${spacing.md};\n  width: 100%;\n  margin-top: 50px;\n  ${media.tablet`\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  `};\n  ${media.phablet`\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  `};\n`;\nconst Playlist = _styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n_c = Playlist;\nconst PlaylistMask = _styled.div`\n  ${mixins.flexCenter};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 30px;\n  color: ${colors.white};\n  opacity: 0;\n  transition: ${theme.transition};\n`;\n_c2 = PlaylistMask;\nconst PlaylistImage = _styled.img`\n  object-fit: cover;\n`;\n_c3 = PlaylistImage;\nconst PlaylistCover = _styled(Link)`\n  ${mixins.coverShadow};\n  position: relative;\n  width: 100%;\n  margin-bottom: ${spacing.base};\n  &:hover,\n  &:focus {\n    ${PlaylistMask} {\n      opacity: 1;\n    }\n  }\n`;\n_c4 = PlaylistCover;\nconst PlaceholderArtwork = _styled.div`\n  ${mixins.flexCenter};\n  position: relative;\n  width: 100%;\n  padding-bottom: 100%;\n  background-color: ${colors.darkGrey};\n  svg {\n    width: 50px;\n    height: 50px;\n  }\n`;\n_c5 = PlaceholderArtwork;\nconst PlaceholderContent = _styled.div`\n  ${mixins.flexCenter};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\n_c6 = PlaceholderContent;\nconst PlaylistName = _styled(Link)`\n  display: inline;\n  border-bottom: 1px solid transparent;\n  &:hover,\n  &:focus {\n    border-bottom: 1px solid ${colors.white};\n  }\n`;\n_c7 = PlaylistName;\nconst TotalTracks = _styled.div`\n  text-transform: uppercase;\n  margin: 5px 0;\n  color: ${colors.lightGrey};\n  font-size: ${fontSizes.xs};\n  letter-spacing: 1px;\n`;\n_c8 = TotalTracks;\n\nconst Playlists = () => {\n  _s();\n\n  const [playlists, setPlaylists] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getPlaylists();\n      setPlaylists(data);\n    };\n\n    catchErrors(fetchData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"w-full mx-auto p-24\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-7xl\",\n      children: \"Your Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-5 gap-8 w-full mt-12\",\n        children: playlists ? playlists.items.map((_ref, i) => {\n          let {\n            id,\n            images,\n            name,\n            tracks\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Playlist, {\n            children: [/*#__PURE__*/_jsxDEV(PlaylistCover, {\n              to: id,\n              children: [images.length ? /*#__PURE__*/_jsxDEV(PlaylistImage, {\n                src: images[0].url,\n                alt: \"Album Art\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(PlaceholderArtwork, {\n                children: /*#__PURE__*/_jsxDEV(PlaceholderContent, {\n                  children: /*#__PURE__*/_jsxDEV(IconMusic, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(PlaylistMask, {\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-info-circle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(PlaylistName, {\n                to: id,\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TotalTracks, {\n                children: [tracks.total, \" Tracks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Playlists, \"QqjMY5V8urkQ+xi2/hsqfexBcq4=\");\n\n_c9 = Playlists;\nexport default Playlists;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"Playlist\");\n$RefreshReg$(_c2, \"PlaylistMask\");\n$RefreshReg$(_c3, \"PlaylistImage\");\n$RefreshReg$(_c4, \"PlaylistCover\");\n$RefreshReg$(_c5, \"PlaceholderArtwork\");\n$RefreshReg$(_c6, \"PlaceholderContent\");\n$RefreshReg$(_c7, \"PlaylistName\");\n$RefreshReg$(_c8, \"TotalTracks\");\n$RefreshReg$(_c9, \"Playlists\");","map":{"version":3,"sources":["/Users/kobe/WebstormProjects/2022/music-transfer/client/src/components/Playlists.js"],"names":["React","useState","useEffect","Link","getPlaylists","catchErrors","Loader","IconMusic","theme","mixins","media","Main","colors","fontSizes","spacing","Wrapper","styled","div","flexBetween","PlaylistsContainer","md","tablet","phablet","Playlist","PlaylistMask","flexCenter","white","transition","PlaylistImage","img","PlaylistCover","coverShadow","base","PlaceholderArtwork","darkGrey","PlaceholderContent","PlaylistName","TotalTracks","lightGrey","xs","Playlists","playlists","setPlaylists","fetchData","data","items","map","i","id","images","name","tracks","length","url","total"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from '@reach/router';\nimport { getPlaylists } from '../spotify';\nimport { catchErrors } from '../utils';\n\nimport Loader from './Loader';\nimport { IconMusic } from './icons';\n\nimport styled from 'styled-components/macro';\nimport { theme, mixins, media, Main } from '../styles';\nconst { colors, fontSizes, spacing } = theme;\n\nconst Wrapper = styled.div`\n  ${mixins.flexBetween};\n  align-items: flex-start;\n`;\nconst PlaylistsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: ${spacing.md};\n  width: 100%;\n  margin-top: 50px;\n  ${media.tablet`\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n  `};\n  ${media.phablet`\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n  `};\n`;\nconst Playlist = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\nconst PlaylistMask = styled.div`\n  ${mixins.flexCenter};\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  font-size: 30px;\n  color: ${colors.white};\n  opacity: 0;\n  transition: ${theme.transition};\n`;\nconst PlaylistImage = styled.img`\n  object-fit: cover;\n`;\nconst PlaylistCover = styled(Link)`\n  ${mixins.coverShadow};\n  position: relative;\n  width: 100%;\n  margin-bottom: ${spacing.base};\n  &:hover,\n  &:focus {\n    ${PlaylistMask} {\n      opacity: 1;\n    }\n  }\n`;\nconst PlaceholderArtwork = styled.div`\n  ${mixins.flexCenter};\n  position: relative;\n  width: 100%;\n  padding-bottom: 100%;\n  background-color: ${colors.darkGrey};\n  svg {\n    width: 50px;\n    height: 50px;\n  }\n`;\nconst PlaceholderContent = styled.div`\n  ${mixins.flexCenter};\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`;\nconst PlaylistName = styled(Link)`\n  display: inline;\n  border-bottom: 1px solid transparent;\n  &:hover,\n  &:focus {\n    border-bottom: 1px solid ${colors.white};\n  }\n`;\nconst TotalTracks = styled.div`\n  text-transform: uppercase;\n  margin: 5px 0;\n  color: ${colors.lightGrey};\n  font-size: ${fontSizes.xs};\n  letter-spacing: 1px;\n`;\n\nconst Playlists = () => {\n  const [playlists, setPlaylists] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getPlaylists();\n      setPlaylists(data);\n    };\n    catchErrors(fetchData());\n  }, []);\n\n  return (\n    <main className=\"w-full mx-auto p-24\">\n      <h2 className=\"text-7xl\">Your Playlists</h2>\n      <div className=\"flex justify-between items-start\">\n        <div className=\"grid grid-cols-5 gap-8 w-full mt-12\">\n          {playlists ? (\n            playlists.items.map(({ id, images, name, tracks }, i) => (\n              <Playlist key={i}>\n                <PlaylistCover to={id}>\n                  {images.length ? (\n                    <PlaylistImage src={images[0].url} alt=\"Album Art\" />\n                  ) : (\n                    <PlaceholderArtwork>\n                      <PlaceholderContent>\n                        <IconMusic />\n                      </PlaceholderContent>\n                    </PlaceholderArtwork>\n                  )}\n                  <PlaylistMask>\n                    <i className=\"fas fa-info-circle\" />\n                  </PlaylistMask>\n                </PlaylistCover>\n                <div>\n                  <PlaylistName to={id}>{name}</PlaylistName>\n                  <TotalTracks>{tracks.total} Tracks</TotalTracks>\n                </div>\n              </Playlist>\n            ))\n          ) : (\n            <Loader />\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default Playlists;\n"]},"metadata":{},"sourceType":"module"}